Object-Oriented Software Development
CS:2820:AAA Fall 2014

Project 6
Team 5


NAME					GITHUB				PARTNER				TASK (from list of suggestions)
Mary Feng				maryfeng			Xiaomeng Yang				3
Austin Washburn			austinforlife		Khashi Reyes				5
Khashi (Paul) Reyes		KhashiReyes			Austin Washburn				1
Xiaomeng Yang			maggieyang829		Xiaomeng Yang				4


LOG
12/2, T: Group meeting. Discussed splitting group into 2 pairs of partners: Mary & Xiaomeng, Austin & Khashi. 
12/3, W: Mary & Xiaomeng met to talk about 3 & 4.
	FieldSearch: add methods findLess, findGreater, findPrefix, findSuffix, findContains

	Add new class (ComboSearch) for combinations of searches
	Add new class (StringParser) for method parse
12/4: Th: Mary, Austin, Xiaomeng met to discuss roles in the project in more detail and continue work in the
	planning stage. Some notes are in Plan.txt.

	Add new class (IDSearch) for method findID
	Add new class (StringParser) for method parse
12/4 Th: Austin, Mary, Xiaomeng meet to discuss order of actions and outline a more specific plan of action. 
    	Began writing out the description of roles, unit test descriptions, etc for assignment due on Friday the 5th.
12/4 Th: Khashi researched REST interface 
12/5 F: Group met in discussion to decide initial plans
12/6 Sat: Austin and Khashi met for a few hours. Austin started reading through existing code to figure out the best
	course of action for implementing special searches. Khashi researched how to return an iterator. We were able to
	bounce ideas off of each other during this process.
12/6 S: Mary added 


12/8: Group meets to discuss structure for searches. Group decides Mary and Xiaomeng will focus on
	restructuring, while Austin and Khashi will focus on other things. Mary and Xiaomeng restructure searches 
	while Austin begins to research REST'
12/9: Austin spends an hour and a half before finally installing Maven. Austin feels accomplished.
12/9: Khashi researches Iterator and finishes StringIterator class, and creates StringIterator test. May make future changes.
12/9: After hours and hours of trying, Xiaomeng finally successfully figured out a design for combining all the Searches. 
	  Our design for searches:
	  1 Change Traverser (process) and Search (doSearch) to abstract class;
	  2 let all the different search classes extends from Search and override its doSearch method
	  3 Put different function classes (SearchField, SearchGreater,...)into Node.java file and let those functions
	    extends from Traverser and override its process() and getLst()
	  4 when doSearch calls D.fetch(Traverser t), it knows which function to perform.
	  
	  Xiaomeng also figured out the way to merge all the identifier lists of Node list returned by GreaterThanSearch, and passed the 
	  integration test for equal search and GreaterthanTest for Greaterthan search, which is implemented by Mary.
	  now that we have this design, every other searches can simply follow the way GreaterThanSearch is done.
	  The major part is finished. Xiaomeng also feels accomplished.

12/10: Austin: I researched more about adding a Server to the project, executed some examples to get a better idea, and ended up spending
	and hour or so trying to resolve some conflicts the group was having while syncing and committing. Also added Prefix, Suffix, and 
	Contains classes for searching.

12:11: Austin: Due to conflicting schedules with Khashi, Khashi and I decided to partition up the work in a different way. I added the
	tests for the different searches. Note to teammates that I added a getResult method inside the test class that will allow
	you to check that the result of your search is equal versus just checking to see if the length of the search is equal.
	
12/10: Mary realized she hasn't updated this in a while. 
		12/6: Added some test data for < and > searches, along with unit tests and initial code for GreaterThan and LessThan methods.
		12/7: Studied the base code, thinking of ways to implement < and > searches.
		12/8: Added unit test for ComboSearch.
		12/9: Had some issues with pushing to GitHub. Added < search. Made some changes in unit tests.
		12/10: Added orSearch, andSearch to ComboSearch. Added more tests for both. More tests to be added.
		To do: add more tests for <, > searches. Make sure to handle all cases.
		
12/13: Yesterday Austin, Mary and Xiaomeng met to add some integration tests and discuss the final submission
		12/12: Austin added some unit tests to his search classes, and refactored the code to make it easier to add 
		new searches. I added a new interface called IDTraverser. This was to satisfy the SRP so that the searches
		could extend their own interface called Traverser, while the IDRemover class and others now extend the IDTraverser
		interface.
		
Final thoughts (Austin):
			I had to make a decision to scrap the server part of the project due to many complications. I spent many hours trying to
		install Maven on my computer, which I did end up doing successfully. After installation I followed the instructions to create 
		a new project. The problem became integrating this project into our group project. After much distress, I met with the professor
		who helped me set it his project. This basically meant that all of my previous work had been scrapped because I now wasn't even
		using what I had before. By this time it was Thursday and I knew our project had other work that needed to be done. With the deadline
		approaching I decided that it made sense to focus on the functionality of the project versus just adding more features. I did
		however, learn a lot about installing projects onto my computer. I learned a lot about using GitHub and resolving conflicts. A 
		lot of my time was spent researching stuff that ultimately helped the team out, but wasn't something I could just push to GitHub
		and get credit for. I hope this is accounted for when my grade is calculated.
		
